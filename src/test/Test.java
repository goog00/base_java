package test;

import java.io.*;
import java.math.BigDecimal;
import java.util.*;

/**
 * Created by ST on 2017/3/16.
 */
public class Test {

    public static void test(){
        Map map = new HashMap();
        map.put("k",1);
        map.put("kk",2);

        Map map1 = new HashMap();
        map1.put("k",3);
        map1.put("kk",4);

        Map map2 = new HashMap();
        map2.put("k",5);
        map2.put("kk",6);

        List list = new ArrayList();
        list.add(map);
        list.add(map1);
        list.add(map2);

        Map map4 = new HashMap();
        map4.put("k",1);
        map4.put("kk",2);
        System.out.println(list.contains(map4));

    }

    public static void main(String[] args) throws Exception {
//        String str = new String(("财务报表.xls").getBytes(),"UTF-8");
//        System.out.println(str);

//        List<String> list = new ArrayList<String>();
//        list.add("12");
//        list.add("2");
//        for(String str :  list){
//            str+=4;
//
//        }
//        for(String str : list){
//            System.out.println(str);
//        }

//        System.currentTimeMillis();
//        List<Integer> list = new ArrayList<Integer>();
//        list.add(5);;
//        list.add(10);;
//        list.add(12);;
//        list.add(15);;
//        list.add(20);;
//        List<Integer> lk = new ArrayList<Integer>();
//        lk.addAll(list);
//        for(Integer k : lk){
//            System.out.println(k);
//        }

//        HashMap map = new HashMap();
//        map.put("k",123);
//        map.put("k",345);
//        System.out.println(map.get("k"));
//
//        System.out.println(Math.asin(10>>4/3));

//        int k = 3;
//        System.out.println(k+=2);
//        System.out.println(k+=3);

        String text


        File fileToCreate = new File("d://", "333.png");

        FileOutputStream os = new FileOutputStream(fileToCreate);
        os.write(text.getBytes());
        os.flush();
        os.close();



    }

    public static  void  cal(List<Integer> list,int k){
        int tmpCount = 0;
        for(int i = 0; i < list.size();i++){
            int ll = list.get(i);
            tmpCount += ll;
            if(tmpCount > k){
                System.out.println(i);
                return;
            }

        }


    }

}
